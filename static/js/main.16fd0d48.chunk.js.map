{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["placevalue","require","Shake","throttle","Container","styled","_templateObject","p","grabbing","Text","_templateObject2","ControlsContainer","_templateObject3","TableHeader","_templateObject4","ControlsTable","_templateObject5","TextInput","_templateObject6","valid","fns","shakeEvent","threshold","timeout","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setTextSize","width","height","setState","textWidth","textHeight","shouldRecalcPlacevalueStrings","handleChange","field","value","_this$setState","defineProperty","handleFnShuffleClick","rand","fn","state","indexOfFn","indexOf","Math","floor","random","length","handlePlayToggle","newIsPlaying","isPlaying","makeInterval","clearInterval","handleResize","forceUpdate","handleShake","shouldHideControlsModal","handleMousedown","e","_this$state","xOffset","yOffset","dragStartX","screenX","dragStartY","screenY","dragStartXOffset","dragStartYOffset","handleMouseup","handleMousemove","_this$state2","mouseX","mouseY","handleKeyDown","keyCode","decrementPlace","incrementPlace","intervalMS","interval","setInterval","_this$state3","place","maxPlace","_this$state4","recalcPlacevalueStrings","_this$state5","worker","Worker","setTimeout","terminate","didFnError","places","i","push","postMessage","concat","JSON","stringify","toString","onmessage","clearTimeout","placevalueStrings","toConsumableArray","data","onerror","message","start","window","addEventListener","document","prevProps","prevState","_this2","_this$state6","react_default","a","createElement","innerRef","el","_el$getBoundingClient","getBoundingClientRect","innerWidth","innerHeight","type","placeholder","onChange","target","onClick","Number","isNaN","parseInt","href","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.16fd0d48.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"react-emotion\";\nconst placevalue = require(\"placevalue-ascii\");\nconst Shake = require(\"shake.js\");\nconst throttle = require(\"lodash.throttle\");\n\nconst Container = styled(\"div\")`\n  overflow: hidden;\n  font-family: monospace;\n  cursor: ${p => (p.grabbing ? \"grabbing\" : \"grab\")};\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -o-user-select: none;\n`;\n\nconst Text = styled(\"pre\")`\n  font-size: 16px;\n  line-height: 6px;\n  letter-spacing: -3px;\n  display: inline-block;\n`;\n\nconst ControlsContainer = styled(\"div\")`\n  top: 20px;\n  left: 20px;\n  position: absolute;\n  padding: 20px;\n  border-radius: 4px;\n  background-color: #fafbfc;\n  border: 1px solid #e9eaeb;\n`;\n\nconst TableHeader = styled(\"p\")`\n  margin-bottom: 4px;\n`;\n\nconst ControlsTable = styled(\"table\")`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst TextInput = styled(\"input\")`\n  border: 2px solid ${p => (p.valid ? \"none\" : \"#FF4136\")};\n`;\n\nconst fns = [\n  \"3 * (x**2 - y**2)\",\n  \"x**4 + y**4\",\n  \"x*x*y*y\",\n  \"5 * Math.sqrt(x*x + y*y)\"\n];\n\nconst shakeEvent = new Shake({\n  threshold: 15,\n  timeout: 1000\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fn: fns[Math.floor(Math.random() * fns.length)],\n      place: 7,\n      yOffset: 0,\n      xOffset: 0,\n      textWidth: null,\n      textHeight: null,\n      maxPlace: 9,\n      isPlaying: false,\n      placevalueStrings: null,\n      didFnError: false,\n      shouldRecalcPlacevalueStrings: false,\n      intervalMS: 100,\n      shouldHideControlsModal: false,\n      dragStartX: null,\n      dragStartY: null,\n      dragStartXOffset: null,\n      dragStartYOffset: null\n    };\n\n    shakeEvent.start();\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    window.addEventListener(\"shake\", this.handleShake);\n    window.addEventListener(\"mousedown\", this.handleMousedown);\n    window.addEventListener(\"mouseup\", this.handleMouseup);\n    window.addEventListener(\"mousemove\", throttle(this.handleMousemove, 50));\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { shouldRecalcPlacevalueStrings } = this.state;\n\n    if (shouldRecalcPlacevalueStrings) {\n      this.recalcPlacevalueStrings();\n      this.setState({\n        shouldRecalcPlacevalueStrings: false\n      });\n    }\n  }\n\n  setTextSize = (width, height) => {\n    this.setState({\n      textWidth: width,\n      textHeight: height,\n      shouldRecalcPlacevalueStrings: true\n    });\n  };\n\n  handleChange = (field, value) => {\n    this.setState({\n      [field]: value,\n      shouldRecalcPlacevalueStrings: true\n    });\n  };\n\n  handleFnShuffleClick = () => {\n    const { fn } = this.state;\n    let indexOfFn = fns.indexOf(fn);\n    let rand;\n    do {\n      rand = Math.floor(Math.random() * fns.length);\n    } while (rand === indexOfFn);\n\n    this.setState({\n      fn: fns[rand],\n      shouldRecalcPlacevalueStrings: true\n    });\n  };\n\n  handlePlayToggle = () => {\n    const { isPlaying } = this.state;\n    const newIsPlaying = !isPlaying;\n\n    if (newIsPlaying) {\n      this.makeInterval();\n    } else {\n      this.clearInterval();\n    }\n\n    this.setState({\n      isPlaying: newIsPlaying\n    });\n  };\n\n  handleResize = () => {\n    this.forceUpdate();\n  };\n\n  handleShake = () => {\n    const { shouldHideControlsModal } = this.state;\n    this.setState({ shouldHideControlsModal: !shouldHideControlsModal });\n  };\n\n  handleMousedown = e => {\n    const { xOffset, yOffset } = this.state;\n\n    this.setState({\n      dragStartX: e.screenX,\n      dragStartY: e.screenY,\n      dragStartXOffset: xOffset,\n      dragStartYOffset: yOffset\n    });\n  };\n\n  handleMouseup = () => {\n    this.setState({\n      dragStartX: null,\n      dragStartY: null,\n      dragStartXOffset: null,\n      dragStartYOffset: null\n    });\n  };\n\n  handleMousemove = e => {\n    const {\n      dragStartX,\n      dragStartY,\n      dragStartXOffset,\n      dragStartYOffset\n    } = this.state;\n\n    if (!dragStartX && !dragStartY) {\n      return;\n    }\n\n    const mouseX = e.screenX;\n    const mouseY = e.screenY;\n\n    this.setState({\n      xOffset: Math.floor((dragStartX - mouseX) / 5) + dragStartXOffset,\n      yOffset: Math.floor((dragStartY - mouseY) / 5) + dragStartYOffset,\n      shouldRecalcPlacevalueStrings: true\n    });\n  };\n\n  handleKeyDown = e => {\n    const { shouldHideControlsModal } = this.state;\n    switch (e.keyCode) {\n      // ESC\n      case 27:\n        this.setState({ shouldHideControlsModal: !shouldHideControlsModal });\n        break;\n      // C\n      case 67:\n        this.handlePlayToggle();\n        break;\n      // J\n      case 74:\n        this.decrementPlace();\n        break;\n      // K\n      case 75:\n        this.incrementPlace();\n        break;\n      default:\n        break;\n    }\n  };\n\n  makeInterval = () => {\n    const { intervalMS } = this.state;\n    this.interval = setInterval(() => {\n      const { isPlaying } = this.state;\n      if (isPlaying) {\n        this.incrementPlace();\n      }\n    }, intervalMS);\n  };\n\n  clearInterval = () => {\n    clearInterval(this.interval);\n    this.interval = null;\n  };\n\n  incrementPlace = () => {\n    const { place, maxPlace } = this.state;\n    this.setState({ place: (place % maxPlace) + 1 });\n  };\n\n  decrementPlace = () => {\n    const { place, maxPlace } = this.state;\n    this.setState({\n      place: place > 1 ? place - 1 : maxPlace\n    });\n  };\n\n  recalcPlacevalueStrings = () => {\n    const {\n      fn,\n      textWidth,\n      textHeight,\n      yOffset,\n      xOffset,\n      maxPlace\n    } = this.state;\n    let worker = new Worker(\"worker.js\");\n\n    const timeout = setTimeout(() => {\n      if (worker) {\n        worker.terminate();\n        worker = null;\n        this.setState({\n          didFnError: true\n        });\n      }\n    }, 2000);\n\n    const places = [];\n    for (let i = 0; i < maxPlace; i++) {\n      places.push(i + 1);\n    }\n\n    worker.postMessage([\n      `${JSON.stringify(\n        places\n      )}.map(p=>(${placevalue.toString()})((x,y)=>${fn},${textHeight},${textWidth},p,${yOffset},${xOffset}))`\n    ]);\n\n    worker.onmessage = e => {\n      clearTimeout(timeout);\n      this.setState({\n        placevalueStrings: [...e.data],\n        didFnError: false\n      });\n      worker.terminate();\n      worker = null;\n    };\n\n    worker.onerror = e => {\n      clearTimeout(timeout);\n      if (e.message.indexOf(\"SyntaxError\") > -1) {\n        this.setState({ didFnError: true });\n      }\n      worker.terminate();\n      worker = null;\n    };\n  };\n\n  render() {\n    const {\n      fn,\n      place,\n      yOffset,\n      xOffset,\n      textHeight,\n      textWidth,\n      maxPlace,\n      placevalueStrings,\n      intervalMS,\n      shouldHideControlsModal,\n      didFnError,\n      dragStartX,\n      dragStartY\n    } = this.state;\n\n    return (\n      <Container grabbing={dragStartX && dragStartY}>\n        {!textHeight && !textWidth && (\n          <Text\n            innerRef={el => {\n              if (el) {\n                const { width, height } = el.getBoundingClientRect();\n                this.setTextSize(\n                  Math.floor(window.innerWidth / width),\n                  Math.floor(window.innerHeight / height)\n                );\n              }\n            }}\n          >\n            *\n          </Text>\n        )}\n        {placevalueStrings && <Text>{placevalueStrings[place] || \"\"}</Text>}\n        {!shouldHideControlsModal && (\n          <ControlsContainer>\n            <div>\n              <div>\n                <TableHeader>Controls</TableHeader>\n              </div>\n              <ControlsTable>\n                <tbody>\n                  <tr>\n                    <td>{`ESC${\n                      \"ondevicemotion\" in window ? \"/shake device\" : \"\"\n                    }`}</td>\n                    <td>Toggle controls modal</td>\n                  </tr>\n                  <tr>\n                    <td>c</td>\n                    <td>Toggle play/pause</td>\n                  </tr>\n                  <tr>\n                    <td>j</td>\n                    <td>Decrement place</td>\n                  </tr>\n                  <tr>\n                    <td>k</td>\n                    <td>Increment place</td>\n                  </tr>\n                  <tr>\n                    <td>Click + drag</td>\n                    <td>Adjust x/y offset</td>\n                  </tr>\n                </tbody>\n              </ControlsTable>\n            </div>\n            <div>\n              <div>\n                <TableHeader>Parameters</TableHeader>\n              </div>\n              <ControlsTable>\n                <tbody>\n                  <tr>\n                    <td>\n                      <label>(x, y) ⇒ </label>\n                    </td>\n                    <td>\n                      <TextInput\n                        type=\"text\"\n                        value={fn}\n                        placeholder=\"e.g. x + y\"\n                        onChange={e => this.handleChange(\"fn\", e.target.value)}\n                        valid={!didFnError}\n                      />\n                      <input\n                        type=\"button\"\n                        value=\"Random\"\n                        onClick={this.handleFnShuffleClick}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <label>Place</label>\n                    </td>\n                    <td>\n                      <TextInput\n                        type=\"text\"\n                        value={place}\n                        placeholder=\"Integer greater than 1\"\n                        onChange={e =>\n                          this.handleChange(\"place\", e.target.value)\n                        }\n                        valid={place && place > 0}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <label>Max Place</label>\n                    </td>\n                    <td>\n                      <TextInput\n                        type=\"text\"\n                        value={maxPlace}\n                        placeholder=\"Integer greater than 1\"\n                        onChange={e =>\n                          this.handleChange(\"maxPlace\", e.target.value)\n                        }\n                        valid={maxPlace && maxPlace > 0}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <label>Y Offset</label>\n                    </td>\n                    <td>\n                      <TextInput\n                        type=\"text\"\n                        value={yOffset}\n                        placeholder=\"Integer\"\n                        onChange={e =>\n                          this.handleChange(\"yOffset\", e.target.value)\n                        }\n                        valid={!Number.isNaN(parseInt(yOffset, 10))}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <label>X Offset</label>\n                    </td>\n                    <td>\n                      <TextInput\n                        type=\"text\"\n                        value={xOffset}\n                        placeholder=\"Integer\"\n                        onChange={e =>\n                          this.handleChange(\"xOffset\", e.target.value)\n                        }\n                        valid={!Number.isNaN(parseInt(xOffset, 10))}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <label>Interval (MS)</label>\n                    </td>\n                    <td>\n                      <TextInput\n                        type=\"text\"\n                        value={intervalMS}\n                        placeholder=\"Integer\"\n                        onChange={e =>\n                          this.handleChange(\"intervalMS\", e.target.value)\n                        }\n                        valid={intervalMS && intervalMS > 0}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </ControlsTable>\n            </div>\n            <div>\n              <a href=\"https://github.com/mouse-reeve/placevalue_ascii\">\n                What is this?\n              </a>\n            </div>\n            <div>\n              <a href=\"https://github.com/thehandsomepanther/placevalue-ascii-playground\">\n                Github\n              </a>\n            </div>\n          </ControlsContainer>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport \"./reset.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}